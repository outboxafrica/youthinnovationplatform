# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-02-18 08:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import eventtools.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('venue', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('introduction', models.TextField(blank=True)),
                ('objectives', models.TextField(blank=True)),
                ('target', models.TextField(blank=True)),
                ('facilitators', models.TextField(blank=True)),
                ('registration_link', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('repeat', eventtools.models.ChoiceTextField(blank=True, choices=[(b'RRULE:FREQ=DAILY', b'Daily'), (b'RRULE:FREQ=WEEKLY', b'Weekly'), (b'RRULE:FREQ=MONTHLY', b'Monthly'), (b'RRULE:FREQ=YEARLY', b'Yearly')], default=b'')),
                ('repeat_until', models.DateField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
            options={
                'ordering': ('start', 'end'),
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
    ]
